@page
@using MercadoPago.Web.Pages
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@model MercadoPago.Web.Pages.PixModel
@{
}

<h1>Pix</h1>

@* <form id="form-checkout" action="/process_payment" method="post"> *@
<form id="form-checkout">
    @Html.AntiForgeryToken()
    <div>
        <div>
            <label for="payerFirstName">Nome</label>
            <input id="form-checkout__payerFirstName" name="payerFirstName" type="text">
        </div>
        <div>
            <label for="payerLastName">Sobrenome</label>
            <input id="form-checkout__payerLastName" name="payerLastName" type="text">
        </div>
        <div>
            <label for="email">E-mail</label>
            <input id="form-checkout__email" name="email" type="text">
        </div>
        <div>
            <label for="identificationType">Tipo de documento</label>
            <select id="form-checkout__identificationType" name="identificationType" type="text"></select>
        </div>
        <div>
            <label for="identificationNumber">Número do documento</label>
            <input id="form-checkout__identificationNumber" name="identificationNumber" type="text">
        </div>
    </div>

    <div>
        <div>
            <input type="hidden" name="transactionAmount" id="transactionAmount" value="0.01">
            <input type="hidden" name="description" id="description" value="Nome do Produto">
            <br>
            <button type="submit">Pagar</button>
        </div>
    </div>

    <img id="qrCode" width="300" />
</form>

@section Scripts
{
    <script>

        const mp = new MercadoPago("@Model.PublicKey");

        (async function getIdentificationTypes() {
          try {
            const identificationTypes = await mp.getIdentificationTypes();
            const identificationTypeElement = document.getElementById('form-checkout__identificationType');

            createSelectOptions(identificationTypeElement, identificationTypes);
          } catch (e) {
            return console.error('Error getting identificationTypes: ', e);
          }
        })();

        function createSelectOptions(elem, options, labelsAndKeys = { label: "name", value: "id" }) {
          const { label, value } = labelsAndKeys;

          elem.options.length = 0;

          const tempOptions = document.createDocumentFragment();

          options.forEach(option => {
            const optValue = option[value];
            const optLabel = option[label];

            const opt = document.createElement('option');
            opt.value = optValue;
            opt.textContent = optLabel;

            tempOptions.appendChild(opt);
          });

          elem.appendChild(tempOptions);
        }

        document.getElementById('form-checkout').onsubmit = async function(event) {
            event.preventDefault();

            let amount = document.getElementById('transactionAmount').value;
            let description = document.getElementById('description').value;
            let email = document.getElementById('form-checkout__email').value;
            let firstName = document.getElementById('form-checkout__payerFirstName').value;
            let lastName = document.getElementById('form-checkout__payerLastName').value;
            let identificationType = document.getElementById('form-checkout__identificationType').value;
            let identificationNumber = document.getElementById('form-checkout__identificationNumber').value;

            const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

            // var result = await fetch("https://localhost:7099/api/pagamento/pix", {
             var result = await fetch("?handler=Pix", {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': antiForgeryToken
                },
                body: JSON.stringify({
                    transactionAmount: Number(amount),
                    description,
                    paymentMethodId: "pix",
                    payer: {
                        email,
                        firstName: firstName,
                        lastName: lastName,
                        identification: {
                            type: identificationType,
                            number: identificationNumber,
                        },
                    }
                }),
            });

            var jsonRes = await result.json();
            var qrCodeBase64 = jsonRes.qrCodeBase64;
            document.getElementById('qrCode').src = `data:image/jpeg;base64,${qrCodeBase64}`;

            console.log(jsonRes.id);
            // window.location.href = jsonRes.ticketUrl;
        };

    </script>
}